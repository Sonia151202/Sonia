{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":10780761,"sourceType":"datasetVersion","datasetId":6689439}],"dockerImageVersionId":30887,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport tensorflow as tf\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport tensorflow as tf\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.applications import DenseNet121\nfrom tensorflow.keras.layers import Dense, GlobalAveragePooling2D, Dropout\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.optimizers import Adam\nfrom sklearn.metrics import confusion_matrix, classification_report","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T09:29:40.930395Z","iopub.execute_input":"2025-02-19T09:29:40.931037Z","iopub.status.idle":"2025-02-19T09:29:40.936031Z","shell.execute_reply.started":"2025-02-19T09:29:40.931008Z","shell.execute_reply":"2025-02-19T09:29:40.934860Z"},"_kg_hide-input":true},"outputs":[],"execution_count":4},{"cell_type":"code","source":"!pip install split-folders","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T05:55:25.477269Z","iopub.execute_input":"2025-02-19T05:55:25.477565Z","iopub.status.idle":"2025-02-19T05:55:29.798097Z","shell.execute_reply.started":"2025-02-19T05:55:25.477545Z","shell.execute_reply":"2025-02-19T05:55:29.797050Z"}},"outputs":[{"name":"stdout","text":"Collecting split-folders\n  Downloading split_folders-0.5.1-py3-none-any.whl.metadata (6.2 kB)\nDownloading split_folders-0.5.1-py3-none-any.whl (8.4 kB)\nInstalling collected packages: split-folders\nSuccessfully installed split-folders-0.5.1\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"extract_path = \"/kaggle/input/final-ivf-train/final_ivf_train\"# You can extract to the working directory\n\nextract_path","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T05:55:34.322864Z","iopub.execute_input":"2025-02-19T05:55:34.323223Z","iopub.status.idle":"2025-02-19T05:55:34.328500Z","shell.execute_reply.started":"2025-02-19T05:55:34.323173Z","shell.execute_reply":"2025-02-19T05:55:34.327652Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"'/kaggle/input/final-ivf-train/final_ivf_train'"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"import splitfolders\n\ninput_folder = \"/kaggle/input/final-ivf-train/final_ivf_train\"\noutput_folder = \"/kaggle/working/train_test_val_split\"  # Save in working directory\n\nsplitfolders.ratio(input_folder, output=output_folder,\n                   seed=42, ratio=(0.7, 0.1, 0.2),\n                   group_prefix=None, move=False)\n\nprint(f\"✅ Data split into train, val, test folders at {output_folder}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T05:56:16.988697Z","iopub.execute_input":"2025-02-19T05:56:16.988989Z","iopub.status.idle":"2025-02-19T05:56:59.180284Z","shell.execute_reply.started":"2025-02-19T05:56:16.988968Z","shell.execute_reply":"2025-02-19T05:56:59.179430Z"}},"outputs":[{"name":"stderr","text":"Copying files: 6399 files [00:42, 151.75 files/s]","output_type":"stream"},{"name":"stdout","text":"✅ Data split into train, val, test folders at /kaggle/working/train_test_val_split\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras import layers, models\nfrom tensorflow.keras.applications import DenseNet121\n\n# Paths to your dataset directories\ntrain_dir = \"/kaggle/working/train_test_val_split/train\"\nval_dir = \"/kaggle/working/train_test_val_split/val\"\ntest_dir = \"/kaggle/working/train_test_val_split/test\"\n\n# ImageDataGenerator for training data\ntrain_datagen = ImageDataGenerator(rescale=1./255)\n\n# ImageDataGenerator for validation and test data (no augmentation)\nval_datagen = ImageDataGenerator(rescale=1./255)\ntest_datagen = ImageDataGenerator(rescale=1./255)\n\n# Data generators\ntrain_generator = train_datagen.flow_from_directory(\n    train_dir,\n    target_size=(224, 224),\n    batch_size=32,\n    class_mode='categorical',\n    shuffle=True\n)\n\nvalidation_generator = val_datagen.flow_from_directory(\n    val_dir,\n    target_size=(224, 224),\n    batch_size=32,\n    class_mode='categorical',\n    shuffle=False\n)\n\ntest_generator = test_datagen.flow_from_directory(\n    test_dir,\n    target_size=(224, 224),\n    batch_size=32,\n    class_mode='categorical',\n    shuffle=False\n)\n\n# Build the model\nbase_model = DenseNet121(\n    weights='imagenet',\n    include_top=False,\n    input_shape=(224, 224, 3)\n)\n\n# Freeze base model for initial training\nbase_model.trainable = False\n\nmodel = models.Sequential([\n    base_model,\n    layers.GlobalAveragePooling2D(),\n    layers.Dense(512, activation='relu'),\n    layers.Dropout(0.5),\n    layers.Dense(10, activation='softmax')\n])\n\n# Compile the model\nmodel.compile(\n    optimizer=tf.keras.optimizers.Adam(learning_rate=0.001),\n    loss='categorical_crossentropy',\n    metrics=['accuracy']\n)\n\n# Stage 1: Train top layers\nhistory = model.fit(\n    train_generator,\n    validation_data=validation_generator,\n    epochs=10,  # Adjust as needed\n    steps_per_epoch=train_generator.samples // train_generator.batch_size,\n    validation_steps=validation_generator.samples // validation_generator.batch_size\n)\n\n# Unfreeze the base model\nbase_model.trainable = True\n\n# Compile with a lower learning rate for fine-tuning\nmodel.compile(\n    optimizer=tf.keras.optimizers.Adam(learning_rate=1e-5),\n    loss='categorical_crossentropy',\n    metrics=['accuracy']\n)\n\n# Stage 2: Fine-tuning the whole model\nhistory_fine = model.fit(\n    train_generator,\n    validation_data=validation_generator,\n    epochs=20,  # Adjust as needed\n    steps_per_epoch=train_generator.samples // train_generator.batch_size,\n    validation_steps=validation_generator.samples // validation_generator.batch_size\n)\n\n# Evaluate on test data\ntest_loss, test_accuracy = model.evaluate(test_generator)\nprint(f\"Test Loss: {test_loss:.4f}\")\nprint(f\"Test Accuracy: {test_accuracy:.4f}\")\n\n# Save the model\nmodel.save('densenet121_fine_tuned_model.h5')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T09:18:03.811546Z","iopub.execute_input":"2025-02-19T09:18:03.811848Z","iopub.status.idle":"2025-02-19T09:29:03.172158Z","shell.execute_reply.started":"2025-02-19T09:18:03.811827Z","shell.execute_reply":"2025-02-19T09:29:03.171043Z"}},"outputs":[{"name":"stdout","text":"Found 4479 images belonging to 10 classes.\nFound 639 images belonging to 10 classes.\nFound 1281 images belonging to 10 classes.\nEpoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:122: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n  self._warn_if_super_not_called()\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m57s\u001b[0m 235ms/step - accuracy: 0.4038 - loss: 1.7387 - val_accuracy: 0.6464 - val_loss: 1.0217\nEpoch 2/10\n\u001b[1m  1/139\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m6s\u001b[0m 50ms/step - accuracy: 0.6250 - loss: 1.1839","output_type":"stream"},{"name":"stderr","text":"/usr/lib/python3.10/contextlib.py:153: UserWarning: Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches. You may need to use the `.repeat()` function when building your dataset.\n  self.gen.throw(typ, value, traceback)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 34ms/step - accuracy: 0.6250 - loss: 1.1839 - val_accuracy: 1.0000 - val_loss: 0.0089\nEpoch 3/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 78ms/step - accuracy: 0.6231 - loss: 1.0473 - val_accuracy: 0.6891 - val_loss: 0.9020\nEpoch 4/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 518us/step - accuracy: 0.5625 - loss: 1.1744 - val_accuracy: 1.0000 - val_loss: 0.0047\nEpoch 5/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 77ms/step - accuracy: 0.6740 - loss: 0.8914 - val_accuracy: 0.7220 - val_loss: 0.8167\nEpoch 6/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 543us/step - accuracy: 0.7812 - loss: 0.6502 - val_accuracy: 1.0000 - val_loss: 0.0024\nEpoch 7/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 77ms/step - accuracy: 0.7047 - loss: 0.8031 - val_accuracy: 0.7138 - val_loss: 0.7802\nEpoch 8/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 522us/step - accuracy: 0.6875 - loss: 0.7750 - val_accuracy: 1.0000 - val_loss: 0.0012\nEpoch 9/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 71ms/step - accuracy: 0.7235 - loss: 0.7623 - val_accuracy: 0.7549 - val_loss: 0.6879\nEpoch 10/10\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 495us/step - accuracy: 0.8125 - loss: 0.6198 - val_accuracy: 1.0000 - val_loss: 0.0022\nEpoch 1/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m273s\u001b[0m 911ms/step - accuracy: 0.3028 - loss: 4.9122 - val_accuracy: 0.6957 - val_loss: 0.8408\nEpoch 2/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 25ms/step - accuracy: 0.8125 - loss: 0.4502 - val_accuracy: 1.0000 - val_loss: 1.1267e-06\nEpoch 3/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 196ms/step - accuracy: 0.6614 - loss: 1.0475 - val_accuracy: 0.7270 - val_loss: 0.7661\nEpoch 4/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 586us/step - accuracy: 0.6875 - loss: 1.0022 - val_accuracy: 1.0000 - val_loss: 2.1573e-06\nEpoch 5/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 197ms/step - accuracy: 0.7228 - loss: 0.8034 - val_accuracy: 0.7582 - val_loss: 0.6794\nEpoch 6/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 688us/step - accuracy: 0.8438 - loss: 0.4760 - val_accuracy: 1.0000 - val_loss: 3.0917e-06\nEpoch 7/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 197ms/step - accuracy: 0.7555 - loss: 0.6659 - val_accuracy: 0.7895 - val_loss: 0.6131\nEpoch 8/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 580us/step - accuracy: 0.9062 - loss: 0.4068 - val_accuracy: 1.0000 - val_loss: 3.1801e-06\nEpoch 9/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 197ms/step - accuracy: 0.8138 - loss: 0.5215 - val_accuracy: 0.8174 - val_loss: 0.5561\nEpoch 10/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 670us/step - accuracy: 0.8438 - loss: 0.5577 - val_accuracy: 1.0000 - val_loss: 5.7985e-06\nEpoch 11/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 197ms/step - accuracy: 0.8448 - loss: 0.4488 - val_accuracy: 0.8372 - val_loss: 0.5005\nEpoch 12/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 600us/step - accuracy: 0.8125 - loss: 0.4255 - val_accuracy: 1.0000 - val_loss: 1.0339e-05\nEpoch 13/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 196ms/step - accuracy: 0.8894 - loss: 0.3464 - val_accuracy: 0.8405 - val_loss: 0.4572\nEpoch 14/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 578us/step - accuracy: 0.9375 - loss: 0.2946 - val_accuracy: 1.0000 - val_loss: 9.0203e-06\nEpoch 15/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 196ms/step - accuracy: 0.8942 - loss: 0.3400 - val_accuracy: 0.8668 - val_loss: 0.4114\nEpoch 16/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 608us/step - accuracy: 0.9375 - loss: 0.3337 - val_accuracy: 1.0000 - val_loss: 1.3695e-05\nEpoch 17/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 196ms/step - accuracy: 0.9173 - loss: 0.2727 - val_accuracy: 0.8849 - val_loss: 0.3792\nEpoch 18/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 627us/step - accuracy: 1.0000 - loss: 0.0681 - val_accuracy: 1.0000 - val_loss: 2.8621e-05\nEpoch 19/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 197ms/step - accuracy: 0.9388 - loss: 0.2064 - val_accuracy: 0.8931 - val_loss: 0.3515\nEpoch 20/20\n\u001b[1m139/139\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 634us/step - accuracy: 0.8750 - loss: 0.2606 - val_accuracy: 1.0000 - val_loss: 2.2565e-05\n\u001b[1m41/41\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 239ms/step - accuracy: 0.8745 - loss: 0.3815\nTest Loss: 0.3111\nTest Accuracy: 0.8946\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"# Predict the classes for the test set\npredictions = model.predict(test_generator, steps=test_generator.samples // test_generator.batch_size, verbose=1)\n\n# Get the predicted class indices (highest probability)\npredicted_class_indices = np.argmax(predictions, axis=1)\n\n# Get the true class indices\ntrue_class_indices = test_generator.classes\n\n# Ensure the lengths match by trimming extra data (if any)\nif len(predicted_class_indices) > len(true_class_indices):\n    predicted_class_indices = predicted_class_indices[:len(true_class_indices)]\nelif len(true_class_indices) > len(predicted_class_indices):\n    true_class_indices = true_class_indices[:len(predicted_class_indices)]\n\n# Get class labels\nclass_labels = list(test_generator.class_indices.keys())\n\n# Generate Classification Report\nprint(\"Classification Report:\")\nprint(classification_report(true_class_indices, predicted_class_indices, target_names=class_labels))\n\n# Generate Confusion Matrix\nconf_matrix = confusion_matrix(true_class_indices, predicted_class_indices)\n\n# Plot Confusion Matrix using Seaborn\nplt.figure(figsize=(10, 7))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=class_labels, yticklabels=class_labels)\nplt.title('Confusion Matrix')\nplt.xlabel('Predicted Class')\nplt.ylabel('True Class')\nplt.show()\n\n# Calculate accuracy\naccuracy = np.sum(predicted_class_indices == true_class_indices) / len(true_class_indices)\nprint(f\"Test Accuracy: {accuracy * 100:.2f}%\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T09:29:49.193165Z","iopub.execute_input":"2025-02-19T09:29:49.193519Z","iopub.status.idle":"2025-02-19T09:29:52.482077Z","shell.execute_reply.started":"2025-02-19T09:29:49.193495Z","shell.execute_reply":"2025-02-19T09:29:52.481230Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m40/40\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 65ms/step\nClassification Report:\n                  precision    recall  f1-score   support\n\n         8cell-A       0.88      0.95      0.91       128\n         8cell-B       0.78      0.67      0.72       129\n         8cell-C       0.82      0.80      0.81       128\n     balstosis-C       0.95      0.96      0.95       128\n     blastosis-A       0.96      0.98      0.97       128\n     blastosis-B       0.98      0.95      0.96       128\n        morula-A       0.87      0.94      0.90       128\n        morula-B       0.76      0.84      0.80       128\n        morula-C       0.95      0.87      0.91       128\nnon_embryo_image       1.00      1.00      1.00       127\n\n        accuracy                           0.89      1280\n       macro avg       0.90      0.89      0.89      1280\n    weighted avg       0.90      0.89      0.89      1280\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x700 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Test Accuracy: 89.45%\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"import shutil\n\n# Define the path for download\nmodel_path = '/kaggle/working/densenet121_fine_tuned_model.h5'\n\n# If the model is not saved in '/mnt/data', move it there\nshutil.move('densenet121_fine_tuned_model.h5', model_path)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-19T09:30:03.186468Z","iopub.execute_input":"2025-02-19T09:30:03.186921Z","iopub.status.idle":"2025-02-19T09:30:03.192768Z","shell.execute_reply.started":"2025-02-19T09:30:03.186884Z","shell.execute_reply":"2025-02-19T09:30:03.191978Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"'/kaggle/working/densenet121_fine_tuned_model.h5'"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}